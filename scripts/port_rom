############################################################################
#
# 本定制工具完全免费，DsiXDA版权所有，由MAL神族-沉默之星完成汉化翻译。
# 
# 理论上支持所有民间刷机包的定制，完美支持HTC的所有民间和官方刷机包！
#
# 欢迎光临全球最大中兴社区：神族论坛（http://bbs.malshenzu.com/）
#
############################################################################


scripts/extract_kernel_and_modules

if [ -d MY_DEVICE_WORKING ]
then
  my_device=`scripts/get_build_prop_val ro.product.device MY_DEVICE_WORKING`
  my_board=`scripts/get_build_prop_val ro.product.board MY_DEVICE_WORKING`
  my_platform=`scripts/get_build_prop_val ro.board.platform MY_DEVICE_WORKING`

  #
  # Note: Don't delete MY_DEVICE_WORKING yet, it will be required later in this script
  #
fi

if [ -d MY_KERNEL ] 
then
  echo
  scripts/press_enter
else
  exit 1
fi


#
# Now grab the donor ROM
#

clear
echo
echo "***************************************************************"
echo 
echo "--> 获得一个你想要移植到其它设备的 ROM 文件 <--"
echo
echo "***************************************************************"

scripts/check_rom no_info

if [ -d WORKING_* ]
then

  scripts/press_enter

  cd WORKING_*

  if [ -d system ]
  then

    #
    # Samsung Galaxy S2 or equivalent
    #
    if [ -e zImage ]
    then
      rm -f boot.img

      cp ../tools/samsung_files/unpack-initramfs .
      ./unpack-initramfs zImage
   
      if [ ! -d initramfs_root ]
      then
        echo "错误: 无法解包 initramfs_root 文件夹!"
      else
        mkdir ../BOOT-EXTRACTED
        echo
        mv -vf initramfs_root ../BOOT-EXTRACTED/boot.img-ramdisk
      fi

      rm -f kernel
      rm -f zImage
      rm -f unpack-initramfs

      cd ..

    elif [ -e boot.img ]
    then
      cd ..
      scripts/ensure_boot_extracted
    fi

  else
    cd ..
    echo
    echo "退出和清除文件夹 ..."

    rm -rf MY_KERNEL
    rm -rf MY_DEVICE_WORKING
    exit 0
  fi

else
  echo "您无法选择 ROM，"
  echo "退出并清除文件夹 ..."
  rm -rf MY_KERNEL
  rm -rf MY_DEVICE_WORKING
  exit 0
fi

if [ ! -d BOOT-EXTRACTED ]
then
  echo "Error: BOOT-EXTRACTED folder not found"
  exit 0
fi



clear
echo
echo "***************************************************************"
echo 
echo " 移植你的 ROM"
echo
echo "***************************************************************"

#
# Replace kernel, modify ramdisk and then build new boot.img
#

echo
echo "复制 MY_KERNEL/zImage 到 BOOT-EXTRACTED 文件夹"
cp -f MY_KERNEL/zImage BOOT-EXTRACTED/


echo
echo "复制 MY_KERNEL/boot.img 到新工作文件夹，所以建立新 boot.img"
echo "之前能够决定正确的基本地址。"
echo

cd WORKING_*
cp -f ../MY_KERNEL/boot.img .
cd ..
echo


#
# Rename *.rc files if required
#

board=`scripts/get_product_board`

cd BOOT-EXTRACTED/boot.img-ramdisk
file_list=`ls *.$board.rc 2>/dev/null`

if [ "$file_list" == "" ]
then
 board=`ls init.*.rc | sed -e 's/init.goldfish.rc//g' -e 's/init.\([^.]*\).rc/\1/g' -e '/^$/d'`
 file_list=`ls *.$board.rc 2>/dev/null`
fi

if [ "$file_list" != "" ]
then
  for rc_file in ${file_list[@]}
  do
    new_name=`echo $rc_file | sed -e 's/'"$board"'/'"$my_board"'/g'`

    if [ "$rc_file" != "$new_name" ]
    then
      echo "重命名 ..."
      mv -v $rc_file $new_name
      echo
    fi      
  done
fi


#
# Check if init.rc refers to busybox, and if the busybox binary is
# found in the working folder
# 
if [ "`grep -o -m 1 busybox init.rc`" == "busybox" ]
then
  cd ../../WORKING_*
  find_busybox=`find . -name busybox`
  cd ..

  if [ "$find_busybox" == "" ]
  then
    echo
    echo "----------------------------------------------------------------------"
    echo 
    echo "警告:  此 ramdisk 的 init.rc 引用了 busybox ，但以下工作文件夹中 "
    echo "       未发现 busybox ，如果确认不需要  busybox 并且打包 ROM ；"
    echo "       你的设备将不能启用开机动画 。"
    echo 
    echo "          发现这些:"
    echo 
    grep busybox BOOT-EXTRACTED/boot.img-ramdisk/init.rc
    echo 
    echo "小提示:"
    echo 
    echo "  如需要复制 busybox 到上述所有文件夹，可在 'tools' 文件夹 "
    echo "  中找到所需二进制文件 busybox 。"
    echo "  同时，请确保 update-script 文件拥有如下代码行或相似内容: "
    echo "  set_perm 0 0 04755 SYSTEM:xbin/busybox"
    echo "  以及确定是否遗漏了 /system/xbin 中的一些 symlink"
    echo ""
    echo -n "  希望在脚本中修正这些吗 (y/n)? (默认: y): "
    
    read proceed_fix
    if [ "$proceed_fix" != "n" ]
    then
      scripts/add_busybox
    else
      echo "没做任何修正" 
    fi

    echo
    echo "准备生成 boot.img ，请按回车键继续 ..."
    read enterKey
  fi

else
  cd ../..
fi

scripts/build_boot_img


#
# Set values in build.prop
#

if [ "$my_device" == "UNKNOWN" ]
then
  echo "警告: 不会修改 ro.product.device 在 build.prop 设置文件中(device=UNKNOWN)"
else
  scripts/set_build_prop_val ro.product.device $my_device
fi

if [ "$my_board" == "UNKNOWN" ]
then
  echo "警告: 不会修改 ro.product.board 在 build.prop 设置文件中(board=UNKNOWN)"
else
  scripts/set_build_prop_val ro.product.board $my_board
fi

if [ "$my_platform" == "UNKNOWN" ]
then
  echo "警告: 不会修改 ro.board.platform 在 build.prop 设置文件中(platform=UNKNOWN)"
else
  scripts/set_build_prop_val ro.board.platform $my_platform
fi  



#
# Copy module files to donor ROM
#

if [ -d MY_KERNEL/system ]
then
  cd WORKING_*
  echo 
  echo "正在复制 modules/drivers ..."
  cp -rf ../MY_KERNEL/system/* system/
  cd ..
fi


#
# Copy the zImage by itself if it's a Galaxy S2 or equivalent
#

if [ -e tools/samsung_files/sgs_variants/$my_device ] || \
    [ -e tools/samsung_files/sgs2_variants/$my_device ]
then
  echo 
  echo "正在复制 zImage ..."
  cp -vf MY_KERNEL/zImage WORKING_*/
else
  cd WORKING_*
  rm -f modem.bin flash_image redbend_ua
  cd ..
fi


#
# We should not check or use the mount points in the original updater-script
# when we convert the update-script back to updater-script, because they were 
# only meant for the other device!!
#

cd WORKING_*

if [ -d META-INF/com/google/android ]
then

  cd META-INF/com/google/android

  if [ -e updater-script.orig ]
  then
    rm -f updater-script.orig
  fi

  if [ -e update-binary.orig ]
  then
    rm -f update-binary.orig
  fi

  #
  # Use your device's original updater-script to assist with checking mount points later on
  #
  if [ -e ../../../../../MY_DEVICE_WORKING/META-INF/com/google/android/updater-script ]
  then
    cp ../../../../../MY_DEVICE_WORKING/META-INF/com/google/android/updater-script updater-script.orig
  fi

  cd ../../../..

fi

cd ..


rm -rf MY_KERNEL
rm -rf MY_DEVICE_WORKING



echo
echo "=============================================================="
echo
echo " 如果一切顺利，使用本定制工具可以成功移植或打包 ROM  。   "
echo " 请在打包前确定是否所有步骤完善 。                        "
echo
echo "重要提醒"
echo "---------"
echo " 新制作 ROM 容量大小请勿超过设备内存的最大容量，否则设备  "
echo " 将不能启动，您需要从工作文件夹删除一些非必要的应用程序。 "
echo
echo " 如设备刷入新制作的 ROM 后不能启动，请参考论坛厨房技术支持"
echo " 学习怎样使用 Recovery 日志文件 'logcat' 调试解决问题 。  "
echo 


