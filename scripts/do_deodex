############################################################################
#
# 本定制工具完全免费，DsiXDA版权所有，由MAL神族-沉默之星完成汉化翻译。
# 
# 理论上支持所有民间刷机包的定制，完美支持HTC的所有民间和官方刷机包！
#
# 欢迎光临全球最大中兴社区：神族论坛（http://bbs.malshenzu.com/）
#
############################################################################


while :
do

  clear

  echo
  echo "----------------------------------------------------------------"
  echo
  echo " Deodex 操作的含义是使 ROM 变得定制化和轻便化；它将你的文件放在一起，"
  echo " 使它们能够用于 themes、icons、trackball/trackpad、modifications、etc 。"
  echo
  echo " Deodex 操作(或 de-odex)将会把 ROM 中的 *.odex 文件转换成 classes.dex 文件，"
  echo " 并将它们压缩进相应的 *.apk 或 framework 中的 *.jar 文件。"
  echo "  此进程通常需要几分钟时间，并且不需要你签名这些文件。"
  echo
  echo " 注意：厨房不支持对文件重新进行odex操作，并且这是不可能实现的。"
  echo
  echo "----------------------------------------------------------------"
  echo

  if [ ! -d WORKING_* ]
  then
    echo 未发现工作文件夹!
    scripts/press_enter
    exit 0
  fi

  cd WORKING_*

  if [ ! -d system/app ]
  then
    echo "system/app 丢失!"
    cd ..
    scripts/press_enter
    exit 0
  fi

  if [ ! -d system/framework ]
  then
    echo "system/framework 丢失!"
    cd ..
    scripts/press_enter
    exit 0
  fi



  #
  # Look for odex files in preload folder (e.g. in Galaxy S2)
  #

  if [ -d preload/symlink/system/app ]
  then

    cd preload/symlink/system/app

    num_preload_odex=`find . | grep -c "\.odex$"`
    num_preload_apk=`find . | grep -c "\.apk$"`
    num_sysapp_odex=`find ../../../../system/app | grep -c "\.odex$"`
    num_sysfr_odex=`find ../../../../system/framework | grep -c "\.odex$"`

    # Case 1 - No odex files in preload or /system/app
    if [ $num_preload_odex == 0 ] && [ $num_sysapp_odex == 0 ] 
    then
      echo "在 /preload/symlink/system/app 或 /system/app 文件夹中未发现 ODEX 文件"
      echo

    # Case 2 - No apk/odex files in preload but odex files in /system/app
    elif [ $num_preload_odex == 0 ] && [ $num_preload_apk == 0 ] 
    then

      if [ ! -e preload_apk_list ]
      then
        echo "警告: 在 /preload/symlink/system/app 文件夹中未发现 APK/ODEX 文件"
        echo
      fi

    # Case 3 - apk/odex files in preload
    elif [ $num_preload_odex -gt 0 ] || [ $num_preload_apk -gt 0 ]
    then

      echo "注意: 在 /preload 文件夹中发现 $num_preload_apk APK 和 $num_preload_odex ODEX文件."
      echo  
      echo "暂时移动 preload 符号链接文件夹中的文件到 /system/app (y/n)? "
      echo -n "(默认: y): "
        
      read move_files
      echo

      if [ "$move_files" == "n" ]
      then
        echo "警告: 未移动!"
      else

        if [ $num_preload_apk -gt 0 ] 
        then
          apk_list=`ls *.apk`
          echo $apk_list > preload_apk_list
          mv -fv *.apk ../../../../system/app/
        else
          touch placeholder
        fi

        if [ $num_preload_odex -gt 0 ] 
        then
          mv -fv *.odex ../../../../system/app/
        fi

      fi

      echo
    fi

    cd ../../../..
  fi



  num_odex_fr=`find system/framework | grep -c "\.odex$"`
  num_odex_app=`find system/app | grep -c "\.odex$"`

  echo "已在 /system/framework 中发现 $num_odex_fr *.odex 文件"
  echo "已在 /system/app 中发现 $num_odex_app *.odex 文件"

  if [ -e preload/symlink/system/app/preload_apk_list ]
  then
    echo
    echo "注意:在 de-odex 合并完成后，一组 APK 文件"
    echo "将会被移回到 /preload 文件夹."
    echo 
  fi


  if [ $num_odex_fr == 0 ] && [ $num_odex_app == 0 ]
  then
    echo
    echo "不需要进行 de-odex 合并操作!"
    cd ..
    scripts/press_enter
    exit 0
  fi

  if [ $num_odex_fr == 0 ] && [ $num_odex_app -gt 0 ]
  then
    echo
    echo "注意: 如果 framework 文件夹已经进行了 Deodex 操作"
    echo "则 app 文件夹也必须进行 Deodex 操作。"
    echo
  fi


  cd ..
  scripts/convert_to_unix tools/deodex_files/api_level.txt    
  api_level=`scripts/get_api_level`
  cd WORKING_*


  #
  # Show menu choices
  #

  echo
  echo "输入选项:（选择前请确保你设置了正确的API级别）"
  echo

  if [ $num_odex_app -gt 0 ] || [ $num_odex_fr -gt 0 ]
  then
    echo " bb  = 备份这两个文件夹 (建议每次定制先备份)"
  fi

  echo "  v  = 设置 Android 系统的 API 级别 (当前级别 = $api_level)"
  echo
  echo "       特别注意: 请确保你设置了正确的API级别！"
  echo "                 否则Deodex后的文件可能会出现问题！"
  echo

  if [ $num_odex_fr -gt 0 ]
  then
    echo "  f  = Deodex /system/framework"
  fi
  if [ $num_odex_app -gt 0 ]
  then
    echo "  a  = Deodex /system/app"
  fi
  if [ $num_odex_app -gt 0 ] && [ $num_odex_fr -gt 0 ]
  then
    echo "  b  = 两个文件夹（推荐）"
  fi
  echo "  s  = 单个文件"
  echo "  x  = 退出"
  echo
  echo -n "请输入选择项： "

  read enterChoice

  list1=( app )
  list2=( framework )
  list3=( framework app )

  if [ "$enterChoice" == "a" ]
  then
    dir_list=app
  elif [ "$enterChoice" == "v" ]
  then
    cd ..
    scripts/change_api_level
    continue
  elif [ "$enterChoice" == "f" ] 
  then
    dir_list=framework
  elif [ "$enterChoice" == "b" ] 
  then
    dir_list="framework app"
  elif [ "$enterChoice" == "s" ]
  then
    cd ..
    scripts/choose_single_deodex
    continue
  elif [ "$enterChoice" == "bb" ]
  then

    #
    # Backup
    #

    folder_list=( framework app )
    date_str=`date '+%m%d%y_%H%M%S'`

    for f in ${folder_list[@]}
    do

      backup_folder="old_`echo -n $f`_$date_str"
      cd system/$f

      echo
      echo "在工作文件夹以外创建备份文件夹 $backup_folder ..."
      mkdir ../../../$backup_folder
      cp  -r * ../../../$backup_folder/
      echo "$f 文件夹已完成备份."

      cd ../..
    done

    cd ..
    scripts/press_enter
    continue

  elif [ "$enterChoice" == "x" ]
  then
    cd ..
    exit 0
  else
    cd ..
    continue
  fi


  sgs2_fix=no

  # Add java.awt.jar to framework folder (fix Email.apk and MobilePrint.apk)
  # - Thanks to xeudoxus
  if [ `echo $dir_list | grep -c app` -gt 0 ] && \
      [ -e system/framework/com.samsung.device.jar ] && [ ! -e system/framework/java.awt.jar ]
  then
    if [ -e system/app/Email.apk ] || [ -e system/app/MobilePrint.apk ] 
    then
      sgs2_fix=yes
      cp -f ../tools/samsung_files/java.awt.jar system/framework/
    fi
  fi

  cd ..
  scripts/do_deodex_folder "$dir_list"

  cd WORKING_*

  if [ "$sgs2_fix" == "yes" ]
  then
    rm -f system/framework/java.awt.jar
  fi

  num_odex_app=`find system/app | grep -c "\.odex$"`
  num_apk_app=`find system/app | grep -c "\.apk$"`
  num_odex_fr=`find system/framework | grep -c "\.odex$"`

  echo
  echo "$num_odex_app *.odex 文件仍保留在 system/app"
  echo "$num_odex_fr *.odex 文件仍保留在 system/framework"

  if [ $num_odex_fr == 0 ] && [ $num_odex_app -gt 0 ]
  then
    echo
    echo "警告: 如果 framework 文件夹已经 Deodex"
    echo "那么 app 文件夹必须要 Deodex"
  fi

  # For some Samsung Exynos Galaxy S2 / Note ROMs
  if [ $num_odex_app == 0 ] && [ $num_apk_app != 0 ] && [ -e preload/symlink/system/app/preload_apk_list ]
  then
    echo
    echo "移回原来在 /preload/symlink/system/app 里的所有 *.apk ..."
    echo

    for apk in `cat preload/symlink/system/app/preload_apk_list`
    do
      mv system/app/$apk preload/symlink/system/app/
    done

    rm -f preload/symlink/system/app/preload_apk_list

    echo
  fi


  cd ..
  scripts/press_enter

  if [ $num_odex_fr == 0 ] && [ $num_odex_app == 0 ]
  then
    exit 0
  fi

done
