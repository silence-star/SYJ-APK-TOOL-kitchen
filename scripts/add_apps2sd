############################################################################
#
# 本定制工具完全免费，DsiXDA版权所有，由MAL神族-沉默之星完成汉化翻译。
# 
# 理论上支持所有民间刷机包的定制，完美支持HTC的所有民间和官方刷机包！
#
# 欢迎光临全球最大中兴社区：神族论坛（http://bbs.malshenzu.com/）
#
############################################################################


scripts/check_galaxies

if [ "$?" == "1" ]
then
  clear
  echo
  echo "本定制工具不支持此ROM"
  exit 0
fi

if [ "$1" == "" ]
then
  clear

elif [ "$1" == "show_help" ]
then

  clear
  echo
  echo "-----------------------------------------------------------------"
  echo  
  echo "Apps2SD 功能允许您将软件安装到SD卡上，节约设备内部存储空间"
  echo
  echo "注意: 此功能一般适用于内部存储空间较小的设备，如果您的设备拥有较大"
  echo "内部存储空间（例如Nexus S），那么不需要这个功能（影响软件运行速度）"
  echo
  echo "本定制工具采用Darktremor Apps2SD 方法。请确保您的存储卡拥有较快速度"
  echo "（例如Class 6）, 并对分区使用合适文件系统（例如EXT3）。通常并不需要"
  echo "Swap交换分区"
  echo
  echo "-----------------------------------------------------------------"
  echo

fi

device_name=`scripts/get_device_name`
change_mnt=`scripts/get_edify_def_val $device_name change_mnt`
change_mnt_dell=`scripts/get_edify_def_val $device_name change_mnt_dell`

if [ -e tools/edify_defs/$device_name ]
then
  if [ "$change_mnt" != "UNKNOWN" ] || [ "$change_mnt_dell" != "UNKNOWN" ]
  then
    echo "警告: 此设备 ($device_name) 很可能不支持 Apps2SD！"
    echo
  fi
fi


echo -n "继续添加 Apps2SD 功能(y/n)? (默认为: y): "
read do_apps2sd

if [ "$do_apps2sd" == "n" ]
then
  exit 0
fi

echo

if [ -d WORKING_* ]
then

  cd WORKING_*

  if [ ! -e META-INF/com/google/android/update-script ]
  then
    echo "错误: update-script 刷机脚本没有发现！"
    cd ..
    exit 0
  fi

  su_path=`find . -name su`

  if [ "$su_path" == "" ]
  then
    echo "工作文件夹下找不到 SU 二进制文件！"
    echo "首先你必须 ROOT 你的 ROM。"
    cd ..
    exit 0
  else

    echo
    echo "发现 $su_path"

    cd .. 
    scripts/a2sd_exists

    if [ "$?" == "1" ]
    then
      echo
      echo "Apps2SD 添加成功！"
      scripts/add_cachesd_to_update_script
      exit 0
    fi

  fi

else
  echo
  echo 找不到工作文件夹，你需要创建一个。
  exit 0
fi


scripts/ensure_boot_extracted

if [ -d BOOT-EXTRACTED ]
then
  if [ -d WORKING_* ]
  then
    echo
  else
    exit 0
  fi
else
  exit 0
fi

if [ -d BOOT-EXTRACTED/boot.img-ramdisk ]
then
  cd BOOT-EXTRACTED/boot.img-ramdisk
else
  echo "错误: 找不到 BOOT-EXTRACTED/boot.img-ramdisk 文件夹！"
  exit 0
fi

test_property=`grep -c "on property:cm.filesystem.ready=1" init.rc`
test_start_a2sd=`grep -c "start a2sd" init.rc`
test_sysinit=`grep -c "start sysinit" init.rc`
test_cm_sysinit=`grep -c "exec /system/bin/sysinit" init.rc`

if [[ "$test_property" != "0" && "$test_start_a2sd" != "0" ]] || \
   [[ "$test_property" != "0" && "$test_sysinit" != "0" ]] || \
   [[ "$test_property" != "0" && "$test_cm_sysinit" != "0" ]] 
then
  echo "init.rc 中已经开启 a2sd！"
  cd ../..
  echo 
  echo "删除 BOOT-EXTRACTED 文件夹 ..."
  rm -rf BOOT-EXTRACTED

else

  echo
  echo 修改 ramdisk 中的 init.rc 以开启 Apps2SD 功能...


  if [ "$test_sysinit" != "0" ] 
  then
    sed -i -e 's/start sysinit/start sysinit\n    on property:cm.filesystem.ready=1/' init.rc 

  elif [ "$test_start_a2sd" != "0" ] && [ "$test_property" == "0" ]
  then
    sed -i -e 's/start a2sd/start a2sd\n    on property:cm.filesystem.ready=1/' init.rc 

  elif [ "$test_start_a2sd" == "0" ] && [ "$test_property" == "0" ]
  then
    sed -i -e 's/class_start default/start a2sd\n    on property:cm.filesystem.ready=1\n\n    class_start default/' init.rc
 
  elif [ "$test_start_a2sd" == "0" ] && [ "$test_property" != "0" ]
  then
    sed -i -e 's/on property:cm.filesystem.ready=1/start a2sd\n    on property:cm.filesystem.ready=1/' init.rc 
  fi

  test_service_a2sd=`grep -c "service a2sd" init.rc`
  test_service_sysinit=`grep -c "service sysinit" init.rc`

  if [ "$test_service_a2sd" == "0" ] && [ "$test_service_sysinit" == "0" ]
  then
    sed -i -e 's/service media /service a2sd \/system\/bin\/logwrapper \/system\/bin\/sh \/system\/bin\/a2sd\n    disabled\n    oneshot\n\nservice media /' init.rc
  fi

  cd ../..
  scripts/build_boot_img

fi

scripts/add_apps2sd_files
scripts/add_apps2sd_to_update_script
res=$?

if [ "$res" == "0" ]
then

  #
  # apps2sd 可能包括 Bash 二进制文件
  #
  find_cmd=`find tools/apps2sd_files -name bash`
  if [ "$find_cmd" != "" ]
  then
    scripts/add_bash_to_update_script
  fi

  #
  # 提示 busybox 运行方法
  #
  if [ "$test_sysinit" == "0" ] 
  then
    scripts/add_busybox_run_parts for_apps2sd
  fi

  #
  # Dalvik-cache to SD
  #
  scripts/add_cachesd_to_update_script

  echo
  echo 完成

fi
